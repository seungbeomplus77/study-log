<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
		
		<!-- Target 클래스 : AOP 를 적용할 클래스 -->
		<bean id="testServiceTarget" class="ex01.aop.before.TestServiceImpl"/>
		
		<!-- Advice 클래스 : 공통사항을 가지고 있는 클래스 -->
		<bean id="beforeAdvice" class="ex01.aop.before.BeforeLogAdvice"/>
		
		
		<!-- Pointcut : 실제 Advice가 적용 될 Joinpoint(Advice가 적용 될 지점) -->
		<!-- 단일 패턴 -->
		<!--
		<bean id="myPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
			<property name="pattern" value=".*write.*"/>
		</bean>
		-->
		
		<!-- 다중 패턴 -->
		<bean id="myPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
			<property name="patterns">
				<list>
					<value>.*save.*</value>
					<value>.*write.*</value>
				</list>
			</property>
		</bean>
		
		<!-- Advisor 설정 : Advice와 Pointcut을 연결하는 작업 -->
		<bean id="testAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
			<property name="advice" ref="beforeAdvice"/>
			<property name="pointcut" ref="myPointcut"/>
		</bean>
		
		<!-- AOP 적용 -->
		<bean id="testService" class="org.springframework.aop.framework.ProxyFactoryBean">
			<property name="target" ref="testServiceTarget"/>
			<property name="interceptorNames">
				<list>
					<value>testAdvisor</value>
				</list>
			</property>
		</bean>
</beans>  
